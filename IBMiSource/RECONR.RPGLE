000100160513      *===========================================================================
000200160512     H option(*noDebugIo)
000300160513      *===========================================================================
000400020523      *
000500160513      *             GROUP BENIFIT SERVICES SOFTWARE
000600160513      *
000700160513      *  Written by:   J. Torres
000800160513      *  Date Written: 05/12/16
000900160524      *  Description:  Generate XLS files for EyeMed
001000160524      *                (Old groups are hardcoded because they will not change,
001100160524      *                 all other groups moving forward go under new groups).
001200160513      *
001300160513      *===========================================================================
001400160520
001500161222     Freconev   if   e           k disk    rename(reconevr:everFile)
001600161222
001700161222     Frecon     uf a e           k disk    rename(reconr:reconFile)
001800160523
001900161222     Fmcov22    if   e           k disk    rename(mcovr:memcovFile)
002000150820
002100161222     Fmember    if   e           k disk    rename(membr:memberFile)
002200161222
002300161222     Fmemalt    if   e           k disk    rename(memaltr:altFile)
002400161222
002500160511      //==================================================================
002600160511      // mainline
002700160511      //===================================================================
002800150820
002900160511       exsr init;
003000160511       exsr main;
003100160511       exsr exit;
003200160511
003300160511      //===================================================================
003400160511      // main
003500160511      //===================================================================
003600160511
003700160511       begsr main;
003800160511
003900161222        setll *loval memberFile;
004000161222        read memberFile;
004100161222
004200161222        dow not %eof;
004300161222
004400160524        // Create file with new groups...
004500161222        chain (mbtrst : mbsub# : mbacct) everFile;
004600161222        if %found;
004700160520
004800161222         chain (mbtrst : mbsub# : mbacct : mbssno : cmplan) memcovFile;
004900161222          if %found;
005000161222           exsr moveFields;
005100161222           exsr writeFile;
005200160523         endif;
005300160511
005400161222        endif;
005500160524
005600161222        read memberFile;
005700161222        enddo;
005800161222
005900160511       endsr;
006000160520
006100161222      //===================================================================
006200161222      // move fileds
006300161222      //===================================================================
006400161222
006500161222       begsr moveFields;
006600161222
006700161222       //chain (mcssno) memberFile;
006800161222       // if %found;
006900161222       ssn# = %char(mbssno);
007000161222       lname = mlname;
007100161222       fname = mfname;
007200161222       orgdate = %char(enrldt);
007300161222       // endif;
007400161222
007500161222       chain (mcssno : 'EV') altFile;
007600161222        if %found;
007700161222          altid = maaltid;
007800161222        endif;
007900161222
008000161222       endsr;
008100161222
008200161222      //===================================================================
008300161222      // write file;
008400161222      //===================================================================
008500161222
008600161222       begsr writeFile;
008700161222
008800161222       chain (%char(mbssno)) reconFile;
008900161222       if not %found;
009000161222        write reconFile;
009100161222       else;
009200161222        update reconFile;
009300161222       endif;
009400161222
009500161222       endsr;
009600161222
009700160511      //===================================================================
009800160511      // exit
009900160511      //===================================================================
010000160511
010100160511       begsr exit;
010200160511
010300160511        *inlr = '1';
010400160511        return;
010500160511
010600160511       endsr;
010700160511
010800160511      //===================================================================
010900160511      // init
011000160511      //===================================================================
011100160511
011200160511       begsr init;
011300160520
011400160511       endsr;
011500010412
011600160511       //==============================================================
