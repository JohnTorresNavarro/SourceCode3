000100171229
000200171229       Ctl-Opt option(*noDebugIo) bnddir('GBSBIND')  DftActGrp(*no)
000300171229          ActGrp(*New);
000400171227
000500171229      *-------------------------------------------------------------------------
000600171229      *
000700200106      *  Description: File Transfer Report - Excel Format
000800171229      *  Programmer.: Brian Rees
000900200106      *  Date.......: 01/06/2020
001000171229      *
001001200106      * This will read the ADP Output file and create a true excel format
001002200106      * spread sheet. That will allow us to format the report, wrap the data,
001003200106      * include grid lines and page breaks.
001004200106      *
001100171229      *-------------------------------------------------------------------------
001200161109
001300180228      *-------------------------------------------------------------------------
001400180228      *
001500181102      * Change Log
001600180228      *
002600190503      *
002700180228      *-------------------------------------------------------------------------
002800171229
002900171229      *-------------------------------------------------------------------------
003000171229      *
003100171229      * Declare Files
003200171229      *
003300171229      *-------------------------------------------------------------------------
003400171229
003500171227
003600180626       // Universal Dispaly File - Excel
003700200106       dcl-f GBS0029L WorkStn
003800200106          Handler('UNIVERSAL(HANDLER)');
004000171227
005800200106       dcl-f ADPOutputp;
005900161109
006000170420
006100171229      *-------------------------------------------------------------------------
006200171229      *
006300171229      * Global Variables
006400171229      *
006500171229      *-------------------------------------------------------------------------
007602200429       dcl-s BlankRows Char(10) Dim(2000);
007603200106       dcl-s i Zoned(5);
007605200106
007606200106
007607200106
009100180404      *-------------------------------------------------------------------------
009200180404      *
009300180404      * *Entry Procedure
009400180404      *
009500180404      *-------------------------------------------------------------------------
009600180404       Dcl-pr Main ExtPgm;
009700200106         *N  Char(150);
009701200107         *n  char(10);
010000180404       End-Pr;
010100180404
010200180404       dcl-pi Main;
010300200106         iFileName Char(150);
010301200107         iKey      Char(10);
010600180404       End-Pi;
010700180404
011400180102      *-------------------------------------------------------------------------
011500171229      *
011600180102      * Mainline Program
011700171229      *
011800180102      *-------------------------------------------------------------------------
011801200106       iFileName = %ScanRpl('.csv':'.xml':iFileName);
011802200107
011803200107       FullAcct = 'Account: ' + %Subst(iKey:1:3) + '-'
011804200107         + %Subst(iKey:4:3) + '-'
011805200107         + %Subst(iKey:7:4) ;
011806200107
011807200106
012400200106       xml_Dest = iFileName;
012501200106
012502200106       Header_Line();
012503200106       Detail_Line();
012504200106
012505200106       Write Footer;
012506200106
012507200106       Write PgBrk_H;       // Page Break Header Page
012508200106       PageBreak_D();       // Page Break Detail ( Line )
012509200106       Write PgBrk_End;     // Page Break Footer
012510200106
012511200106       Write EndPage;
012700161109
012800180223       *inlr = *on;
012900161109
013000170905
013100171229
013200170905       //-----------------------------------------------------------------
013300180223       //
013400200106       // Excel XML Header..
013500180223       //
013600180223       //-----------------------------------------------------------------
013700200106       dcl-proc Header_Line;
013800170606
014104200106         exec sql
014105200106           Select count(*)
014106200106             into :hRowCnt
014107200106             from ADPOutputp;
014108200106
014109200106         hRowCnt = hRowCnt + 10;
014110200106
016700200106         hFileName = %Subst(iFileName:6);
016701200106         hFileName = %ScanRpl( '.xml' : '' : hFileName );
016702200106
016703200106         Write Header;
016704200106
016800180223       end-proc;
016900171109
016901200106
016902200106       //-----------------------------------------------------------------
016903200106       //
016904200106       // Excel XML Detail..
016905200106       //
016906200106       //-----------------------------------------------------------------
016907200106       dcl-proc Detail_Line;
016908200106
016909200106         dcl-s ExpandCnt Zoned(5);
016910200106         dcl-s RowNbr  Zoned(5) inz;
016911200106
016912200106         i = 0;
016913200106
016926200106         Setll *Start ADPOutputp;
016927200106
016928200106         Dou %Eof(ADPOutputp);
016929200106           read ADPOutputp;
016930200106           if %eof(ADPOutputp);
016931200106             leave;
016932200106           endif;
016933200106
016934200106           RowNbr = RowNbr + 1;
016935200106
016936200106           dType = oType;
016937200106           dInfo = oInfo;
016938200106
016939200106           ExpandCnt = %Len( %Trim( oInfo )) / 60;
016940200106           dHeight = ( ExpandCnt + 1 ) * 15;
016944200106
016945200106           if %Trim( oType ) = '' and
016946200106              %Trim( oInfo ) = '' and RowNbr > 1;
016954200106             i = i + 1;
016955200106             BlankRows(i) = %Char(RowNbr);
016956200107             RowNbr = RowNbr - 1;         // Not printing this line..
016959200106           else;
016960200106
016969200106             Write Detail;
016970200107
016971200106           endif;
016972200106
016973200106         Enddo;
016974200106
016975200106       end-proc;
016976200106
016977200106
016978200106       //-----------------------------------------------------------------
016979200106       //
016980200106       // Page Break - Detail
016981200106       //
016982200106       //-----------------------------------------------------------------
016983200106       dcl-proc PageBreak_D;
016984200106
016985200429         dcl-s x Zoned(5);
016986200106
016987200106         // Loop through the Row Array
016988200106         for x = 1 to i;
016989200429           if x >= 1020;
016990200429             leave;
016991200429           EndIf;
016992200429
016993200106           BrkRow = BlankRows(x);
016994200106           Write PgBrk_d;
016995200106         EndFor;
016996200106
016997200106       end-proc;
