000100180724       Ctl-opt option(*noDebugIo)   DftActGrp(*no)
000200190711         bnddir( 'GBSBIND' );
000300180607
000400180607      *-------------------------------------------------------------------------
000500180607      *
000600200430      *  Description: Read throught the GBS2.0 File and load the
000700180824      *    cross reference file.
000800180607      *
000900180607      *  Programmer.: Brian Rees
001000200430      *  Date.......: 04/30/2020
001100180607      *
001101211027      *-------------------------------------------------------------------------
001102211027      * Modifications
001103211027      *
001104211027      * 10/27/2021  B.Rees  Addition of the State and Cost Center files.
001105211027      *
001106211027      *
001200180607      *-------------------------------------------------------------------------
001300180607
001400180607      *-------------------------------------------------------------------------
001500180607      *
001600180607      * Declare Files
001700180607      *
001800180607      *-------------------------------------------------------------------------
001900180607
002000200507       dcl-f PayFPlanp keyed usage( *input : *output );
002001211027       dcl-f PayFStatep keyed usage( *input : *output );
002002211027       dcl-f PayFCCntrp keyed usage( *input : *output );
002100180724
002200180607
002300180607
002400180607      *-------------------------------------------------------------------------
002500180607      *
002600180607      * Global Variables
002700180607      *
002800180607      *-------------------------------------------------------------------------
002900180724
003000180725
003100180824
003200180824
003300180824      *-------------------------------------------------------------------------
003400180824      *
003500180824      * *Entry Procedure
003600180824      *
003700180824      *-------------------------------------------------------------------------
003800180918       Dcl-pr Main ExtPgm;
003900190711         *N  Char(10);
004000180918       End-Pr;
004100180918
004200180918       dcl-pi Main;
004300190711         pKey Char(10);
004400180918       End-Pi;
004500180724
004600180918       dcl-s  pTrst Zoned(3);
004700180918       dcl-s  pSub  Zoned(3);
004800180918       dcl-s  pAcct Zoned(4);
005200200507       dcl-s  sqPlan  Char(20);
005201211027
005202211027       dcl-s  sqState  Char(2);
005203211027       dcl-s  sqCntr   Char(20);
005204200507
005800190711       dcl-s SqlStmt Char(500);
005900211027       dcl-c q '''';
005901211027
007400180607      *-------------------------------------------------------------------------
007500180607      *
007600180607      * Mainline Program
007700180607      *
007800180607      *-------------------------------------------------------------------------
007801200507
007802211027       Exec Sql
007803211027         Set Option Commit = *None, Naming = *Sys;
007804211027
007805211027
007806200507       pTrst = %Dec( %Subst( pKey : 1 : 3 ) : 3 : 0 );
007807200507       pSub  = %Dec( %Subst( pKey : 4 : 3 ) : 3 : 0 );
007808200507       pAcct = %Dec( %Subst( pKey : 7 : 4 ) : 4 : 0 );
007809200507
007810211027
007811211027
007900190711
007901211027       Process_Plans();
007902211027       Process_States();
007903211027       Process_CostCntr();
007904211027
007905211027
007906211027       *inlr = *On;
007907211027
007908211027       // ----------------------------------------------------------------
007909211027       dcl-proc Process_Plans;
007910211027
008000190711
008100211027         SqlStmt =
008200211027           'Select Distinct upper(l2_Plan) ' +
008300211027           'From gbs20l1 ' +
008400211027           'join gbs20l2 on l1_ssn = l2_ssn';
008500190711
008600190711
008700211027         Exec Sql
008800211027           Declare c1 Cursor For sqlstmt;
008900211027         Exec Sql
009000211027           Prepare sqlstmt From :sqlstmt;
009100211027         Exec Sql
009200211027           Open c1;
009300190711
009400211027         dou SqlCod <> *Zero;
009500211027           Exec Sql
009600211027             Fetch Next From c1
009601211027               Into :sqPlan;
009700190711
009800211027           if SqlCod <> *zero;
009900211027             leave;
010000211027           endif;
010100190711
010600190711
010901211027           chain ( pTrst : pSub : pAcct : sqPlan ) PayFPlanp;
010902200507
011100211027           if not %Found( PayFPlanp ) ;
011200190711
011300211027             pfTrst = pTrst;
011400211027             pfSub# = pSub;
011500211027             pfAcct = pAcct;
011600190711
011800211027             pfinPlan = sqPlan;
012200190711
012300211027             pfCrtBy = 'GBS0039R5';
012400211027             pfCrtDt = %Dec( %Date ) ;
012500211027             pfCrtTm = %Dec( %Time ) ;
012600190711
012700211027             Write r_PayFPlan;
012800190711
012801211027           EndIf;
013100190711
013200211027         enddo;
013300211027         Exec Sql
013400211027           Close c1;
013600180724
013601211027       End-Proc;
013602211027
013603211027       // ----------------------------------------------------------------
013604211027       dcl-proc Process_States;
013605211027
013606211027
013607211027         SqlStmt =
013608211027           'Select Distinct upper(l1_State) ' +
013609211027           'From gbs20l1  where l1_State > ' + q + q ;
013611211027
013612211027
013613211027         Exec Sql
013614211027           Declare c2 Cursor For sqlstmt2;
013615211027         Exec Sql
013616211027           Prepare sqlstmt2 From :sqlstmt;
013617211027         Exec Sql
013618211027           Open c2;
013619211027
013620211027         dou SqlCod <> *Zero;
013621211027           Exec Sql
013622211027             Fetch Next From c2
013623211027               Into :sqState;
013624211027
013625211027           if SqlCod <> *zero;
013626211027             leave;
013627211027           endif;
013628211027
013629211027
013630211027           chain ( pTrst : pSub : pAcct : sqState ) PayFStatep;
013631211027
013632211027           if not %Found( PayFStatep ) ;
013633211027
013634211027             pfTrst = pTrst;
013635211027             pfSub# = pSub;
013636211027             pfAcct = pAcct;
013637211027
013638211027             pfState = sqState;
013639211027
013640211027             pfCrtBy = 'GBS0039R5';
013641211027             pfCrtDt = %Dec( %Date ) ;
013642211027             pfCrtTm = %Dec( %Time ) ;
013643211027
013644211027             Write r_PayFStat;
013645211027
013646211027           EndIf;
013647211027
013648211027         enddo;
013649211027         Exec Sql
013650211027           Close c2;
013651211027
013652211027       End-Proc;
013653211027
013654211027
013655211027       // ----------------------------------------------------------------
013656211027       dcl-proc Process_CostCntr;
013657211027
013658211027
013659211027         SqlStmt =
013660211027           'Select Distinct upper(l1_CostCtr) ' +
013661211027           'From gbs20l1 where l1_CostCtr > ' + q + q  ;
013662211027
013663211027
013664211027         Exec Sql
013665211027           Declare c3 Cursor For sqlstmt3;
013666211027         Exec Sql
013667211027           Prepare sqlstmt3 From :sqlstmt;
013668211027         Exec Sql
013669211027           Open c3;
013670211027
013671211027         dou SqlCod <> *Zero;
013672211027           Exec Sql
013673211027             Fetch Next From c3
013674211027               Into :sqCntr;
013675211027
013676211027           if SqlCod <> *zero;
013677211027             leave;
013678211027           endif;
013679211027
013680211027
013681211027           chain ( pTrst : pSub : pAcct : sqCntr ) PayFCCntrp;
013682211027
013683211211           if not %Found( PayFCCntrp ) ;
013684211027
013685211027             pfTrst = pTrst;
013686211027             pfSub# = pSub;
013687211027             pfAcct = pAcct;
013688211027
013689211027             pfDiv = sqCntr;
013690211027
013691211027             pfCrtBy = 'GBS0039R5';
013692211027             pfCrtDt = %Dec( %Date ) ;
013693211027             pfCrtTm = %Dec( %Time ) ;
013694211027
013695211027             Write r_PayFCntr;
013696211027
013697211027           EndIf;
013698211027
013699211027         enddo;
013700211027         Exec Sql
013701211027           Close c3;
013702211027
013703211027       End-Proc;
013704200303
