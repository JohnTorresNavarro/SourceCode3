000100180620       Ctl-opt option(*noDebugIo)   DftActGrp(*no)
000200180620          bnddir('GBSBIND' : 'GBSBDIR');
000300180620
000400180620      *-------------------------------------------------------------------------
000500180620      *
000600180914      *  Description: Batch Member Diary Note
000700180914      *  Programmer.: Brian Rees
000800180914      *  Date.......: 09/14/2018
000900180620      *
001000180620      *-------------------------------------------------------------------------
001100180620
001200180620      *-------------------------------------------------------------------------
001300180620      *
001400180620      * Declare Files
001500180620      *
001600180620      *-------------------------------------------------------------------------
001700180914       Dcl-f Gbs0041D WorkStn
001800180620          Handler('PROFOUNDUI(HANDLER)')
001900180620          SFILE(LstSFL:rrn);
002000180620
002100180621       Dcl-f DiaryHd1 keyed ExtDesc('F.DIARYHD1') ExtFile(*extdesc)
002200180621          usage( *input : *output );
002300180621
002400180621       Dcl-f DiaryDt1 keyed ExtDesc('F.DIARYDT1') ExtFile(*extdesc)
002500180621          usage( *input : *output );
002600180621
002700180621       Dcl-f Codesl1 keyed ExtDesc('F.CODESL1') ExtFile(*extdesc);
002800180621       Dcl-f Member keyed ExtDesc('F.MEMBER') ExtFile(*extdesc);
002900180622       Dcl-f Hist   keyed ExtDesc('F.HIST')   ExtFile(*extdesc)
003000180622          usage( *input : *output );
003100180830
003200180914       dcl-f gbs0041p keyed
003300180830          usage(*output : *update : *delete );
003400180622
003500180620
003600180620
003700180620      *-------------------------------------------------------------------------
003800180620      *
003900180620      * Global Variables
004000180620      *
004100180620      *-------------------------------------------------------------------------
004200180621       dcl-ds pgmd
004300180621          ExtName('IOPGMD') PSDS;
004400180621          @pgmq *proc;
004500180621       end-ds;
004600180621
004700180621
004800180621       dcl-s rrn Zoned(5);
004900180621       dcl-s wKey Char(10);
005000180830       dcl-s hasError Char(1);
005100180830       dcl-c digits  '0123456789';
005200180620
005300180914       dcl-s wSSN Char(9);
005400180830
005500180830       dcl-s ListProc ind inz;
005600180830
005700180620
005800180620      *------------------------------------------------------------------
005900180620      *
006000180620      * Procedures
006100180620      *
006200180620      *------------------------------------------------------------------
006300180830       /include GBSPGM/QMODSRC,#GettokPR
006400180830       /include GBSPGM/QMODSRC,#zFillpr
006500180830
006600180620
006700180620
006800180621      *-------------------------------------------------------------------------
006900180621      *
007000180621      * *Entry Procedure
007100180621      *
007200180621      *-------------------------------------------------------------------------
007300180621
007400180829
007500180829
007600180829
007700180620      *-------------------------------------------------------------------------
007800180620      *
007900180620      * Mainline Program
008000180620      *
008100180620      *-------------------------------------------------------------------------
008200180621
008300180829
008400180829
008500180829       dou btnExit = *on;
008600180829
008700180829          ClearS1();
008800180829          LoadS1();
008900180829
009000180829          DisplyS1();
009100180829
009200180829          if btnExit = *on;
009300180829             leave;
009400180829          endif;
009500180829
009600180829
009700180829          Select;
009800180829
009900180829          When btnClear = *on;
010000180914             Setll *Loval gbs0041p;
010100180829
010200180914             Dou %Eof(gbs0041p);
010300180914                read gbs0041p;
010400180914                if %eof(gbs0041p);
010500180829                   leave;
010600180829                endif;
010700180914                delete gbs0041p;
010800180829             Enddo;
010900180830             ListProc = *off;
011000180829
011100180829
011200180829
011300180829          When btnAccept = *on;
011400180913             validate();
011500180913             if hasError = *on;
011600180913                iter;
011700180913             EndIf;
011800180829
011900180913             Write_Hist();
012000180830             ListProc = *on;
012100180829
012200180830
012300180830
012400180829          when  btnAddNew = *on;
012500180829             Clear AddScreen;
012600180829             $AddRecord();
012700180829
012800180829
012900180829          other;
013000180829             ReadChanged();
013100180829
013200180829          endsl;
013300180829
013400180829       enddo;
013500180829
013600180829       *inlr = *on;
013700180829
013800180829
013900180829
014000180829      *-------------------------------------------------------------------------
014100180829       dcl-proc ClearS1;
014200180829
014300180829          //?Clear the Subfile
014400180829          ClrSfl = *on;
014500180829          Write LstCtl;
014600180829          ClrSfl = *off;
014700180829
014800180829          rrn = 0;
014900180829
015000180829       end-proc;
015100180829
015200180829      *-------------------------------------------------------------------------
015300180829
015400180829       dcl-proc DisplyS1;
015500180829
015600180829          DspSfl = *on  ;
015700180829          exfmt  LstCtl ;
015800180829          DspSfl = *off;
015900180829
016000180829       end-proc;
016100180829
016200180829      *-------------------------------------------------------------------------
016300180829
016400180829       dcl-proc LoadS1;
016500180829
016600180914          Setll *Loval gbs0041p;
016700180829
016800180914          Dou %Eof(gbs0041p);
016900180914             read gbs0041p;
017000180829
017100180914             if %eof(gbs0041p);
017200180829                leave;
017300180829             endif;
017400180829
017500180914             s1ssn = gbssn;
017600180914             s1ssn# = gbssn#;
017700180914             s1Name = gbName;
017800180829
017900180829             rrn = rrn + 1;
018000180829             write LstSfl;
018100180829          Enddo;
018200180829
018300180829          shwClrAct = *off;
018400180829          if rrn > 0 ;
018500180829             shwClrAct = *on;
018600180829          EndIf;
018700180829
018800180829
018900180830       end-proc;
019000180829
019100180829
019200180829      *-------------------------------------------------------------------------
019300180829       dcl-proc ReadChanged;
019400180829
019500180829          Dou *in95 = *ON;
019600180829             READC LstSfl;
019700180829             *in95 = %EOF;
019800180829
019900180829             If *in95 = *OFF;
020000180829
020100180829                If btnDelete= *on;
020200180914                   chain s1ssn# gbs0041p;
020300180914                   if %Found( gbs0041p ) ;
020400180914                      delete r_gbs0041;
020500180829                   EndIf;
020600180829                endIf;
020700180829
020800180829                btnDelete = *off;
020900180829                update LstSfl;
021000180829             endIf;
021100180829
021200180829
021300180829          enddo;
021400180829       end-proc;
021500180620
021600180830      *-------------------------------------------------------------------------
021700180830       dcl-proc $AddRecord;
021800180830
021900180830
022000180830          dou btnCancel = *on;
022100180830
022200180830             exfmt AddScreen;
022300180914             errMember = *off;
022400180914             errMbr2   = *off;
022500180830             s2Msg = '';
022600180830
022700180830
022800180830             if btnAccept = *on;
022900180830                ListProc = *off;
023000180830
023100180830
023200180914                   chain s2ssn Member;
023300180914                   if not %Found( Member );
023400180914                      errMember = *on;
023500180830                      iter;
023600180830                   EndIf;
023700180830
023800180830
023900180830                   // Load to Array
024000180914                   chain s2ssn  gbs0041p;
024100180914                   if %Found( GBS0041P );
024200180914                      errMbr2 = *on;
024300180830                      iter;
024400180830                   EndIf;
024500180830
024600180830
024700180830
024800180914                   if not %Found( gbs0041p ) ;
024900180830
025000180914
025100180914                      wssn = %editc( s2ssn : 'X' );
025200180914                      gbSSN   = %Subst( wssn : 1 : 3 ) + '-' +
025300180914                                %Subst( wssn : 4 : 2 ) + '-' +
025400180914                                %Subst( wssn : 6 : 4 );
025500180914
025600180914                      gbSSN#  = s2ssn;
025700180914                      gbName   = %Trim(mlname) + ', ' + %Trim( mfname );
025800180830
025900180914                      write r_gbs0041;
026000180830
026100180914                      s2Msg = 'Member ' + gbssn + ' has been added.';
026200180914                      s2ssn = 0;
026300180830
026400180830                   EndIf;
026500180830
026600180830                endif;
026700180830          EndDo;
026800180830
026900180830
027000180830       end-proc;
027100180621
027200180830
027300180830
027400180913       // ----------------------------------------------------------------
027500180830
027600180913       dcl-proc Write_Hist;
027700180830
027800180913          dcl-s Note_Length Zoned(4);
027900180913          dcl-s wCount Zoned(5);
028000180913          dcl-s jobCount Zoned(5);
028100180913
028200180913
028300180914          Setll *Loval gbs0041p;
028400180913
028500180914          Dou %Eof(gbs0041p);
028600180914             read gbs0041p;
028700180914             if %eof(gbs0041p);
028800180913                leave;
028900180913             endif;
029000180913
029100180913
029200180914             wKey = ' ' + %Editc( gbSSN# : 'X' );
029300180914             chain gbssn# Member;
029400180830
029500180913             //-------------------------
029600180913             //
029700180913             // Write the Header
029800180913             //
029900180913             //-------------------------
030000180913             nhKey = wKey;
030100180913             nhCode = 'W'+ s2Code;
030200180913             nhSubj = s2Subj;
030300180913             nhaddt = %Dec(%Date);
030400180913             nhadti = %Dec(%Time);
030500180913             nhadus = wqUsrn;
030600180913
030700180913             write rDiaryhd;
030800180913
030900180913
031000180913
031100180913             //-------------------------
031200180913             //
031300180913             // Write the Detail
031400180913             //
031500180913             //-------------------------
031600180913             ndKey = nhKey;
031700180913             ndAddt = nhAddt;
031800180913             ndAdTi = nhAdTi;
031900180913
032000180913
032100180913             Note_Length = %Len( %Trim( s2Note ));
032200180913             wCount = 1;
032300180913             ndSeq# = 0;
032400180913
032500180913             dow wCount <= Note_Length;
032600180913
032700180913                ndSeq# = ndSeq# + 1;
032800180913                ndText = %SubSt( s2Note : wCount : 70 );
032900180913
033000180913                write rDiaryDt;
033100180913
033200180913                wCount = wcount + 70;
033300180913
033400180913
033500180913             EndDo;
033600180913
033700180913
033800180913             //-------------------------
033900180913             //
034000180913             // Write History Record.
034100180913             //
034200180913             //-------------------------
034300180913             hKey = wKey;
034400180913             trmFlg = '';
034500180913             TrlFlg = '';
034600180913             DtrFlg = 'N';
034700180913             hdSeq# = 0;
034800180913
034900180913             hOper = wqUsrn;
035000180914             hPrgnm = 'INQ041R';
035100180913             TrDate = %Dec( %date );
035200180913             hsTrTime = %Time;
035300180913
035400180914             hsTrst = mbTrst;
035500180914             hsSub# = mbSub#;
035600180914             hsAcct = mbAcct;
035700180913
035800180913             hsDltd = 'A';
035900180913
036000180913             ck#Not = nhSubj;
036100180913
036200180913
036300180913             chain nhCode Codesl1;
036400180913             if %Found( Codesl1 ) ;
036500180913                Note2 = sDescr;
036600180913             Else;
036700180913                Note2 = '';
036800180913             EndIf;
036900180913
037000180913
037100180914             trCode = 'M81';
037200180913
037300180913             Write Histr;
037400180913
037500180913             jobCount = jobCount +1;
037600180830
037700180913          enddo;
037800180830
037900180914          s3Msg = 'Completed updating ' + %Char( jobCount ) + ' members.';
038000180913          exfmt msgScreen;
038100180913
038200180913
038300180913       End-Proc;
038400180830
038500180830      *-------------------------------------------------------------------------
038600180830       dcl-proc Validate;
038700180830
038800180830          hasError = *off;
038900180830
039000180830          if ListProc = *on;
039100180830
039200180830             exfmt ContScreen;
039300180830             if btnBack = *on;
039400180830                btnBack = *off;
039500180830                hasError = *on;
039600180830                Return;
039700180830             EndIf;
039800180830
039900180830             if btnCont = *on;
040000180830                btnCont = *off;
040100180830                return;
040200180830             EndIf;
040300180830
040400180830          EndIf;
040500180830
040600180830       end-proc;
