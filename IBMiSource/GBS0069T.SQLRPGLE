000100180724       Ctl-opt option(*noDebugIo)   DftActGrp(*no)
000200180724          bnddir( 'GBSBIND' );
000300180607
000400180607      *-------------------------------------------------------------------------
000500180607      *
000600210409      *  Description: Scan through the GBS 3.0 file spread sheet.
000700201203      *  Check for Errors that will cause the record not to update.
000800201203      *
000900210409      *  Copied from GBS0065R
001000180607      *
001100180607      *  Programmer.: Brian Rees
001200210409      *  Date.......: 04/09/2021
001300180607      *
001400180924      *-------------------------------------------------------------------------
001500180924      *  Change Log
001600180924      *
001700180924      *
001800180607      *-------------------------------------------------------------------------
001900180607
002000180607      *-------------------------------------------------------------------------
002100180924      *
002200180607      * Declare Files
002300180607      *
002400180607      *-------------------------------------------------------------------------
002500180607
002600210409       dcl-f GBS30Mbr  keyed;
002700210409       dcl-f GBS30mCov keyed;
002800210409       dcl-f GBS30Dep  keyed;
002900210409       dcl-f GBS30DCov keyed;
003000201112
003100201112
003200201208       dcl-f PyFile_Err keyed usage(*output) usropn;
003300180724
003400180724       Dcl-f Member keyed ExtDesc('F.MEMBER') ExtFile(*extdesc);
003500201118       Dcl-f Depndc   keyed ExtDesc('F.DEPNDC') ExtFile(*extdesc);
003600180824
003700201203       dcl-f gbs0030l1 keyed;
003800201204       dcl-f gbs0028e  keyed;
003900201203
004000180607      *-------------------------------------------------------------------------
004100180607      *
004200180607      * Global Variables
004300180607      *
004400180607      *-------------------------------------------------------------------------
004500180724       dcl-s cssn   Char(9);
004600180724       dcl-s wSSN   Zoned(9);
004700180824
004800180824      *-------------------------------------------------------------------------
004900180824      *
005000180824      * *Entry Procedure
005100180824      *
005200180824      *-------------------------------------------------------------------------
005300180920       Dcl-pr Main ExtPgm;
005400200115         *N  Char(10);
005500180920       End-Pr;
005600180920
005700180920       dcl-pi Main;
005800200115         pKey Char(10);
005900180920       End-Pi;
006000180920
006100201203       dcl-s pTrst Zoned(3);
006200201203       dcl-s pSub  Zoned(3);
006300201203       dcl-s pAcct Zoned(4);
006400180724
006500201203       dcl-s hasError ind;
006600201203
006700180724      *-------------------------------------------------------------------------
006800180724      *
006900180724      * Procedures
007000180724      *
007100180724      *-------------------------------------------------------------------------
007200201204      /include GBSPGM/QMODSRC,#CommandPr
007300201204
007400180824
007500180607
007600180607      *-------------------------------------------------------------------------
007700180607      *
007800180607      * Mainline Program
007900180607      *
008000180607      *-------------------------------------------------------------------------
008100201203
008200201204       Exec Sql
008300201204         Set Option Commit = *None, Naming = *Sys;
008400201203
008500201203
008600201203       HasError = *off;
008700201203
008800180920       pTrst = %Dec( %Subst( pKey : 1 : 3 ) : 3 : 0 );
008900180920       pSub  = %Dec( %Subst( pKey : 4 : 3 ) : 3 : 0 );
009000180920       pAcct = %Dec( %Subst( pKey : 7 : 4 ) : 4 : 0 );
009100180920
009200201203
009300201203       // Clear Error List
009400201204       exec sql
009500201204         delete from PyFile_Err where ertrst = :pTrst and
009600201204         erSub# = :pSub and
009700201204         erAcct = :pAcct;
009800201112
009900201208       open pyFile_Err;
010000210409       Setll *loval GBS30Mbr;
010100210409       Dou %eof(GBS30Mbr);
010200201112
010300210409         read GBS30Mbr;
010400210409         if %eof(GBS30Mbr);
010500201112           leave;
010600201112         endif;
010700201112
010800201203         cSSN = %Scanrpl( '-' : '' : l1_ssn);
010900201203         wSSN = %Dec( cssn : 9 : 0 );
011000180724
011100201203         checkMember();
011200180827
011300180827       Enddo;
011400201208       Close pyFile_Err;
011500180724
011600201204       if hasError;
011700201204         Send_Emails();
011800201204       endif;
011900180607
012000180924       *inlr = *on;
012100180724
012200180824      *----------------------------------------------------------------
012300180824      *
012400180824      * Check Member Record
012500180824      *
012600180824      *----------------------------------------------------------------
012700180824
012800201117       Dcl-Proc CheckMember;
012900180824
013000180824
013100200115         // Get Member Information
013200201117         chain wSSN Member;
013300201117         if %Found( Member );
013400180824
013500201203           if  (pTrst <> mbTrst ) or
013600201203               (pSub  <> mbSub# ) or
013700201203               (pAcct <> mbAcct ) ;
013800201203
013900201203
014000201203             erTrst = pTrst;
014100201203             erSub# = pSub;
014200201203             erAcct = pAcct;
014300201204             erssn  = l1_ssn;
014400201203             erText = 'Member was found in a different account: ' +
014500201203                  %Editc( mbTrst : 'X' ) + '-' +
014600201203                  %Editc( mbSub# : 'X' ) + '-' +
014700201203                  %Editc( mbAcct : 'X' );
014800201203
014900201203             HasError = *on;
015000201203             write r_PyFile;
015100201203
015200201203           EndIf;
015300201203
015400201203
015500201203
015600201117         EndIf;    // Member File
015700180824
015800180824
015900180924       end-Proc;
016000201203
016100201203      *----------------------------------------------------------------
016200201203      *
016300201203      * Send Errors
016400201203      *
016500201203      *----------------------------------------------------------------
016600201203
016700201203       Dcl-Proc Send_Emails;
016800201203
016900201203         Dcl-s Library Char(10);
017000201203         Dcl-s Msg Char(2000);
017100201203         dcl-s Subject Char(100);
017200201203         dcl-s toAddr Char(200);
017300201203         dcl-s ccAddr Char(200);
017400201203
017500201203         dcl-c q const ('''');
017600201203         dcl-s aaEmail Char(25) ;
017700201203
017800201203         dcl-s wGroup Char(20);
017900201203
018000201203         //------------------------------
018100201203         //
018200201203         // Get the Environment
018300201203         //
018400201203         //------------------------------
018500201204         Exec Sql
018600201204           Select objlo00002
018700201204             Into :library
018800201204             From
018900201204               Table (
019000201204                 qsys2.object_statistics(
019100220628                   '*LIBL', 'FILE', object_name => '"F.TRSMST"')
019200201204               ) As x;
019300201203
019400201203
019500201203         // File (Enrollment) Type
019600201203         wGroup = pKey;
019700201203
019800201203         chain wGroup Gbs0030l1;
019900201203
020000201203
020100201203
020200201203         //------------------------------
020300201203         //
020400201203         // Get the AA's Email
020500201203         //
020600201203         //------------------------------
020700201203
020800201203         if FTENRLTYP = 'NEWB';
020900201209           toAddr = 'Account_Installation@gbsio.net';
021000201203
021100201203         else;
021200201203           toAddr = '';
021300201203
021400201203           Setll ( pKey : 'P' ) gbs0028e;
021500201203
021600201203           Dou %Eof(gbs0028e);
021700201203             reade ( pKey : 'P' ) gbs0028e;
021800201203             if %eof(gbs0028e);
021900201203               leave;
022000201203             endif;
022100201203             toAddr =%Trim( toAddr ) + ' ' + %Trim( aeEmail );
022200201203
022300201203           Enddo;
022400201203           toAddr = %Trim( toAddr ) ;
022500201203
022600201203         EndIf;
022700201203
022800201216         if library = 'GBSDTAT';
022900220518           toAddr = 'payrolledi@amwins.com';
023000201216         EndIf;
023100201203
023200201203
023300201203         // Build CSV File.
023400201203         CmdString = 'Sql2csv SqlStmt(' + q + 'Select * From PyFile_Err ' +
023500201203         ' Where erTrst = ' + %Char(pTrst)  +
023600201203         '   and erSub# = ' + %Char(pSub )  +
023700201204         '   and erAcct = ' + %Char(pAcct) + q + ') '  +
023800201204         'ColHdrs(*FLDTEXT) ' +
023900201203         'ToCsv(' + q + '/tmp/AutoGenErr.csv' + q + ')';
024000201203
024100201203         #Command(CmdString:%len(%Trim(CmdString)));
024200201203
024300201203
024400210713         Subject = 'Errors Found during Autoload.' +
024500210713           '   Account: ' + %Char(pTrst) + '-' +
024600210713            %Char(pSub) + '-' + %Char(pAcct);
024700210713
024800210226         Msg = 'Errors were found during the Autoload.' +
024900201204           '<p>Account: ' + %Char(pTrst) + '-' +
025000201204            %Char(pSub) + '-' + %Char(pAcct);
025100201203
025200201203
025300201203         CmdString = 'MailTool toAddr(' + toAddr + ') ' +
025400201203           ' Subject(' + q + %Trim( Subject)  + q + ') ' +
025500201203           ' Message(' + q + %Trim( Msg ) + q + ')' +
025600201204           ' Attach( ' + q + '/tmp/AutoGenErr.csv' + q + ')' +
025700201203           ' BdyCt(' + q + 'text/html; charset=utf-8' + q + ')';
025800201203
025900201203         #Command(CmdString:%len(%Trim(CmdString)));
026000201203
026100201203
026200201203       End-Proc;
