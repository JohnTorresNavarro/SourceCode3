000100180507
000200180511       Ctl-opt option(*noDebugIo)  DftActGrp(*no)  bnddir('GBSBIND');
000300180507
000400180507
000500160928      *-------------------------------------------------------------------------
000600160928      *
000700180511      *  Description: Hitory File Note - Global
000800161007      *  Programmer.: Brian Rees
000900180511      *  Date.......: 05/11/2018
001000160928      *
001100170322      *
001200160928      *-------------------------------------------------------------------------
001300160928      * Modifications
001400160928      *
001500160928      * Date         Programmer    Mod      Description
001600160928      *-------------------------------------------------------------------------
001700160928      *
001800160928      *
001900160928      *-------------------------------------------------------------------------
002000180507
002100180507
002200180511       dcl-f gbs0036d workstn
002300180507          HANDLER('PROFOUNDUI(HANDLER)')
002400180507          SFILE(LSTSFL:rrn);
002500180511
002600180511       Dcl-f AccMst keyed ExtFile('F.ACCMST');
002700180511       Dcl-f HIST   keyed ExtFile('F.HIST')  usage(*output );
002800180514       Dcl-f diaryhd0 keyed ExtFile('F.DIARYHD0') usage(*output );
002900180514
003000180511
003100180511       dcl-f gbs0036p keyed
003200180511          usage(*output : *update : *delete );
003300180508
003400180507
003500180507      *-------------------------------------------------------------------------
003600180507      *
003700180507      * Global Variables
003800180507      *
003900180507      *-------------------------------------------------------------------------
004000180511       dcl-ds pgmd
004100180511          ExtName('IOPGMD') PSDS;
004200180511          @pgmq *proc;
004300180511       end-ds;
004400180511
004500180507       dcl-s hasError ind;
004600180507       dcl-s rrn Zoned(5);
004700180511
004800180511       dcl-s wTrst    Zoned(3);
004900180511       dcl-s wSub#    Zoned(3);
005000180511       dcl-s wAcct    Zoned(4);
005100180511
005200180511       dcl-c digits  '0123456789';
005300180511       dcl-s wActNbr like( s1ActNbr );
005400180514       dcl-s shwClrAct ind inz;
005500180516       dcl-s ListProc ind inz;
005600180516       dcl-s ranOnce ind inz;
005700180516
005800171211
005900161227      *--------------------------------------------
006000180507      *
006100161227      * Procedures
006200180507      *
006300161227      *--------------------------------------------
006400180511       /include GBSPGM/QMODSRC,#GettokPR
006500180511       /include GBSPGM/QMODSRC,#zFillpr
006600180508
006700161005      *-------------------------------------------------------------------------
006800180507      *
006900180507      * Mainline Program
007000180507      *
007100161005      *-------------------------------------------------------------------------
007200150902
007300161223       dou btnExit = *on;
007400160928
007500180511          ClearS1();
007600180511          LoadS1();
007700160928
007800180508          DisplyS1();
007900160928
008000180507          if btnExit = *on;
008100180511             leave;
008200180511          endif;
008300161223
008400161223
008500180511          Select;
008600161223
008700180514          When btnClear = *on;
008800180514             Setll *Loval gbs0036p;
008900180514
009000180514             Dou %Eof(gbs0036p);
009100180514                read gbs0036p;
009200180514                if %eof(gbs0036p);
009300180514                   leave;
009400180514                endif;
009500180514                delete gbs0036p;
009600180514             Enddo;
009700180516             ListProc = *off;
009800180514
009900180514
010000180514
010100180516          When btnAccept = *on;
010200180516             validate();
010300180516             if hasError = *on;
010400180516                iter;
010500180516             EndIf;
010600180516
010700180511             Write_Hist();
010800180516             ListProc = *on;
010900180516
011000161223          when  btnAddNew = *on;
011100180511             Clear AddScreen;
011200180508             $AddRecord();
011300180516
011400161223
011500180511          other;
011600180511             ReadChanged();
011700161223
011800180511          endsl;
011900161223
012000180511       enddo;
012100160928
012200180511       *inlr = *on;
012300160928
012400160928      *-------------------------------------------------------------------------
012500180508       dcl-proc ClearS1;
012600160928
012700180511          //?Clear the Subfile
012800180507          ClrSfl = *on;
012900180507          Write LstCtl;
013000180507          ClrSfl = *off;
013100160928
013200180507          rrn = 0;
013300160928
013400180511       end-proc;
013500160928      *-------------------------------------------------------------------------
013600180508       dcl-proc DisplyS1;
013700160928
013800180511          DspSfl = *on  ;
013900161223          exfmt  LstCtl ;
014000180507          DspSfl = *off;
014100160928
014200180511       end-proc;
014300180511
014400160928      *-------------------------------------------------------------------------
014500180508       dcl-proc LoadS1;
014600180511
014700180511          Setll *Loval gbs0036p;
014800180511
014900180511          Dou %Eof(gbs0036p);
015000180511             read gbs0036p;
015100180511
015200180511             if %eof(gbs0036p);
015300180511                leave;
015400180511             endif;
015500180511
015600180511             s1FulAcct = gbFulAct;
015700180514             if %Len( %trim(gbFulAct)) = 10;
015800180514                s1FulAcct = %Subst( gbFulAct : 1 : 3 ) + '-' +
015900180514                   %Subst( gbFulAct : 4 : 3 ) + '-' +
016000180514                   %Subst( gbFulAct : 7 : 4 );
016100180514             endif;
016200180514
016300180511             s1AcNam1 = gbName;
016400180511             s1trst   = gbTrst;
016500180511             s1Sub#   = gbSub;
016600180511             s1Acct   = gbAcct;
016700180511
016800180511             rrn = rrn + 1;
016900180511             write LstSfl;
017000180511          Enddo;
017100180511
017200180514          shwClrAct = *off;
017300180516          if rrn > 0 ;
017400180514             shwClrAct = *on;
017500180514          EndIf;
017600161005
017700161005
017800180511       end-proc;
017900161223
018000161223      *-------------------------------------------------------------------------
018100180511       dcl-proc $AddRecord;
018200161223
018300161223
018400180511          dou btnCancel = *on;
018500161223
018600180511             exfmt AddScreen;
018700180516             errAccount = *off;
018800180516             errAcct2   = *off;
018900180511             s2Msg = '';
019000180511
019100180511
019200180511             if btnAccept = *on;
019300180516
019400180516                ListProc = *off;
019500180511
019600180511                split();
019700180511                wActNbr = s1ActNbr;
019800180511                s1ActNbr = %ScanRpl( '-' : '' : s1ActNbr );
019900180511                s1ActNbr = %ScanRpl( '-' : '' : s1ActNbr );
020000180511                s1ActNbr = %ScanRpl( ' ' : '' : s1ActNbr );
020100180511
020200180511
020300180511
020400180511                if %check( digits : %Trim( s1ActNbr )) = 0  and
020500180511                   %Len(%Trim( s1ActNbr )) = 10;
020600180511
020700180511                   wTrst = %Dec( %Subst( s1ActNbr : 1 : 3) : 3 : 0 );
020800180511                   wSub# = %Dec( %Subst( s1ActNbr : 4 : 3) : 3 : 0 );
020900180511                   wAcct = %Dec( %Subst( s1ActNbr : 7 : 4) : 4 : 0 );
021000180511
021100180511                   chain ( wTrst : wSub# : wAcct ) AccMst;
021200180511                   if not %Found( AccMst );
021300180511                      errAccount = *on;
021400180511                      iter;
021500180511                   EndIf;
021600180511
021700180511
021800180511                   // Load to Array
021900180511                   chain (wTrst : wSub# : wAcct ) gbs0036p;
022000180516                   if %Found( GBS0036P );
022100180516                      errAcct2 = *on;
022200180516                      iter;
022300180516                   EndIf;
022400180516
022500180516
022600180516
022700180511                   if not %Found( gbs0036p ) ;
022800180511
022900180511                      gbFulAct = wActNbr;
023000180511                      gbTrst   = wTrst;
023100180511                      gbSub    = wSub#;
023200180511                      gbAcct   = wAcct;
023300180511                      gbName   = acNam1;
023400180511
023500180511                      write r_gbs0036;
023600180511
023700180511                      s2Msg = 'Account ' + wActNbr + ' has been added.';
023800180511                      s1ActNbr = '';
023900180511
024000180511                   EndIf;
024100180511
024200180511                endif;
024300180511             endif;
024400180511          EndDo;
024500161223
024600161223
024700180511       end-proc;
024800161223
024900161007      *-------------------------------------------------------------------------
025000180511       dcl-proc Validate;
025100161007
025200180516          hasError = *off;
025300180516
025400180516          if ListProc = *on;
025500180516
025600180516             exfmt ContScreen;
025700180516             if btnBack = *on;
025800180516                btnBack = *off;
025900180516                hasError = *on;
026000180516                Return;
026100180516             EndIf;
026200180516
026300180516             if btnCont = *on;
026400180516                btnCont = *off;
026500180516                return;
026600180516             EndIf;
026700180516
026800180516          EndIf;
026900161223
027000180511       end-proc;
027100161223
027200161223      *-------------------------------------------------------------------------
027300180511       dcl-proc ReadChanged;
027400161223
027500180511          Dou *in95 = *ON;
027600180511             READC LstSfl;
027700180511             *in95 = %EOF;
027800161223
027900180511             If *in95 = *OFF;
028000161223
028100180511                If btnDelete= *on;
028200180511                   chain ( s1trst : s1Sub# : s1acct ) gbs0036p;
028300180511                   if %Found( gbs0036p ) ;
028400180511                      delete r_gbs0036;
028500180511                   EndIf;
028600180511                endIf;
028700161223
028800180511                btnDelete = *off;
028900180511                update LstSfl;
029000180511             endIf;
029100161223
029200161223
029300180511          enddo;
029400180511       end-proc;
029500161223
029600180511
029700180511
029800180511
029900180511      *-------------------------------------------------------------------------
030000180511      *
030100180511      * Split out the account number
030200180511      *
030300180511      *-------------------------------------------------------------------------
030400180511       Dcl-Proc Split;
030500180511
030600180511          dcl-s x int(10);
030700180511          dcl-s tokens varchar(100) dim(50);
030800180511          dcl-s Trst Char(3);
030900180511          dcl-s Sub  Char(3);
031000180511          dcl-s Acct Char(4);
031100180511
031200180511          tokens(*) = #Gettok( s1ActNbr : '-' : x );
031300180511
031400180511
031500180511          // we should have 3 array elements filled  in.
031600180511          // the next blank space should be #4.
031700180511          x = %lookup( '' : tokens ) ;
031800180511          if x = 4;
031900180511             Trst = #zFill( 3 : %Trim( Tokens(1) ));
032000180511             Sub  = #zFill( 3 : %Trim( Tokens(2) ));
032100180511             Acct = #zFill( 4 : %Trim( Tokens(3) ));
032200180511
032300180511             s1ActNbr = trst + '-' + Sub + '-' + Acct;
032400180511
032500180511          EndIf;
032600180511
032700180511
032800180511       End-Proc;
032900180511
033000180511
033100180511      *-------------------------------------------------------------------------
033200180511      *
033300180511      * Write the History Records
033400180511      *
033500180511      *-------------------------------------------------------------------------
033600180511       Dcl-Proc Write_Hist;
033700180511
033800180514          dcl-s Count Zoned(4) inz;
033900180511
034000180511
034100180514          // Header Record..
034200180514          nhcode = 'W' + s2DryCd;
034300180514          nhSubj = s1Subj;
034400180514          nhaddt = %Dec(%Date);
034500180514          nhadti = %Dec(%Time);
034600180514          nhadus = wqusrn;
034700180514
034800180514
034900180514
035000180514          // History Record
035100180511          trCode = 'UHM';
035200180511          hprgnm = 'GBS0036R';
035300180511          hoper = wqusrn;
035400180511          hsdltd = 'A';
035500180511
035600180511          ck#not = s1ck#not;
035700180511          note2 = s1Note2;
035800180511
035900180511          trDate = %Dec(%Date);
036000180511          hsTrTime = %time;
036100180511
036200180511          Setll *Loval gbs0036p;
036300180511
036400180511          Dou %Eof(gbs0036p);
036500180511             read gbs0036p;
036600180511             if %eof(gbs0036p);
036700180511                leave;
036800180511             endif;
036900180511
037000180511             hsTrst = gbTrst;
037100180511             hsSub# = gbSub;
037200180511             hsAcct = gbAcct;
037300180511
037400180511             hkey = %editc( gbTrst : 'X' ) +
037500180511                %editc( gbSub : 'X' ) +
037600180511                %editc( gbAcct : 'X' ) ;
037700180511
037800180511
037900180511             write histr;
038000180511             count = count + 1;
038100180514
038200180514
038300180514             // Header Record
038400180514             nhKey = hkey;
038500180514             write rDiaryhd;
038600180511
038700180511          Enddo;
038800180511
038900180511          s3Msg = 'Completed updating ' + %Char( Count ) + ' records.';
039000180511          exfmt msgScreen;
039100180511
039200180516          ranOnce = *on;
039300180511
039400180511       End-Proc;
