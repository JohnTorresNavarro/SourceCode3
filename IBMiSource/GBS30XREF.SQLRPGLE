000100180724       Ctl-opt option(*noDebugIo)   DftActGrp(*no)
000200190711         bnddir( 'GBSBIND' );
000300180607
000400180607      *-------------------------------------------------------------------------
000500180607      *
000600211027      *  Description: Read throught the GBS3.0 File and load the
000700211027      *    cross reference files.
000800180607      *
000900180607      *  Programmer.: Brian Rees
001000211027      *  Date.......: 10/27/2021
001100180607      *
001200211027      *-------------------------------------------------------------------------
001300211027      * Modifications
001400211027      *
001500211027      * 10/27/2021  B.Rees  Created and Copied from GBS0039R5
001600211027      *
001700211027      *
001800180607      *-------------------------------------------------------------------------
001900180607
002000180607      *-------------------------------------------------------------------------
002100180607      *
002200180607      * Declare Files
002300180607      *
002400180607      *-------------------------------------------------------------------------
002500180607
002600200507       dcl-f PayFPlanp keyed usage( *input : *output );
002700211027       dcl-f PayFStatep keyed usage( *input : *output );
002800211027       dcl-f PayFCCntrp keyed usage( *input : *output );
002900180724
003000180607
003100180607
003200180607      *-------------------------------------------------------------------------
003300180607      *
003400180607      * Global Variables
003500180607      *
003600180607      *-------------------------------------------------------------------------
003700180724
003800180725
003900180824
004000180824
004100180824      *-------------------------------------------------------------------------
004200180824      *
004300180824      * *Entry Procedure
004400180824      *
004500180824      *-------------------------------------------------------------------------
004600180918       Dcl-pr Main ExtPgm;
004700190711         *N  Char(10);
004800180918       End-Pr;
004900180918
005000180918       dcl-pi Main;
005100190711         pKey Char(10);
005200180918       End-Pi;
005300180724
005400180918       dcl-s  pTrst Zoned(3);
005500180918       dcl-s  pSub  Zoned(3);
005600180918       dcl-s  pAcct Zoned(4);
005700200507       dcl-s  sqPlan  Char(20);
005800211027
005900211027       dcl-s  sqState  Char(2);
006000211027       dcl-s  sqCntr   Char(20);
006100200507
006200190711       dcl-s SqlStmt Char(500);
006300211027       dcl-c q '''';
006400211027
006500180607      *-------------------------------------------------------------------------
006600180607      *
006700180607      * Mainline Program
006800180607      *
006900180607      *-------------------------------------------------------------------------
007000200507
007100211027       Exec Sql
007200211027         Set Option Commit = *None, Naming = *Sys;
007300211027
007400211027
007500200507       pTrst = %Dec( %Subst( pKey : 1 : 3 ) : 3 : 0 );
007600200507       pSub  = %Dec( %Subst( pKey : 4 : 3 ) : 3 : 0 );
007700200507       pAcct = %Dec( %Subst( pKey : 7 : 4 ) : 4 : 0 );
007800200507
007900211027
008000211027
008100190711
008200211027       Process_Plans();
008300211027       Process_States();
008400211027       Process_CostCntr();
008500211027
008600211027
008700211027       *inlr = *On;
008800211027
008900211027       // ----------------------------------------------------------------
009000211027       dcl-proc Process_Plans;
009100211027
009200190711
009300211027         SqlStmt =
009400211027           'Select Distinct upper(l2_Plan) ' +
009500211027           'From gbs30mCov ';
009600190711
009700190711
009800211027         Exec Sql
009900211027           Declare c1 Cursor For sqlstmt;
010000211027         Exec Sql
010100211027           Prepare sqlstmt From :sqlstmt;
010200211027         Exec Sql
010300211027           Open c1;
010400190711
010500211027         dou SqlCod <> *Zero;
010600211027           Exec Sql
010700211027             Fetch Next From c1
010800211027               Into :sqPlan;
010900190711
011000211027           if SqlCod <> *zero;
011100211027             leave;
011200211027           endif;
011300190711
011400190711
011500211027           chain ( pTrst : pSub : pAcct : sqPlan ) PayFPlanp;
011600200507
011700211027           if not %Found( PayFPlanp ) ;
011800190711
011900211027             pfTrst = pTrst;
012000211027             pfSub# = pSub;
012100211027             pfAcct = pAcct;
012200190711
012300211027             pfinPlan = sqPlan;
012400190711
012500211027             pfCrtBy = 'GBS30XREF';
012600211027             pfCrtDt = %Dec( %Date ) ;
012700211027             pfCrtTm = %Dec( %Time ) ;
012800190711
012900211027             Write r_PayFPlan;
013000190711
013100211027           EndIf;
013200190711
013300211027         enddo;
013400211027         Exec Sql
013500211027           Close c1;
013600180724
013700211027       End-Proc;
013800211027
013900211027       // ----------------------------------------------------------------
014000211027       dcl-proc Process_States;
014100211027
014200211027
014300211027         SqlStmt =
014400211027           'Select Distinct upper(l1_State) ' +
014500211027           'From gbs30Mbr where l1_State > ' + q + q ;
014600211027
014700211027
014800211027         Exec Sql
014900211027           Declare c2 Cursor For sqlstmt2;
015000211027         Exec Sql
015100211027           Prepare sqlstmt2 From :sqlstmt;
015200211027         Exec Sql
015300211027           Open c2;
015400211027
015500211027         dou SqlCod <> *Zero;
015600211027           Exec Sql
015700211027             Fetch Next From c2
015800211027               Into :sqState;
015900211027
016000211027           if SqlCod <> *zero;
016100211027             leave;
016200211027           endif;
016300211027
016400211027
016500211027           chain ( pTrst : pSub : pAcct : sqState ) PayFStatep;
016600211027
016700211027           if not %Found( PayFStatep ) ;
016800211027
016900211027             pfTrst = pTrst;
017000211027             pfSub# = pSub;
017100211027             pfAcct = pAcct;
017200211027
017300211027             pfState = sqState;
017400211027
017500211027             pfCrtBy = 'GBS30XREF';
017600211027             pfCrtDt = %Dec( %Date ) ;
017700211027             pfCrtTm = %Dec( %Time ) ;
017800211027
017900211027             Write r_PayFStat;
018000211027
018100211027           EndIf;
018200211027
018300211027         enddo;
018400211027         Exec Sql
018500211027           Close c2;
018600211027
018700211027       End-Proc;
018800211027
018900211027
019000211027       // ----------------------------------------------------------------
019100211027       dcl-proc Process_CostCntr;
019200211027
019300211027
019400211027         SqlStmt =
019500211027           'Select Distinct upper(l1_CostCtr) ' +
019600211027           'From gbs30Mbr where l1_CostCtr > ' + q + q  ;
019700211027
019800211027
019900211027         Exec Sql
020000211027           Declare c3 Cursor For sqlstmt3;
020100211027         Exec Sql
020200211027           Prepare sqlstmt3 From :sqlstmt;
020300211027         Exec Sql
020400211027           Open c3;
020500211027
020600211027         dou SqlCod <> *Zero;
020700211027           Exec Sql
020800211027             Fetch Next From c3
020900211027               Into :sqCntr;
021000211027
021100211027           if SqlCod <> *zero;
021200211027             leave;
021300211027           endif;
021400211027
021500211027
021600211027           chain ( pTrst : pSub : pAcct : sqCntr ) PayFCCntrp;
021700211027
021800211211           if not %Found( PayFCCntrp ) ;
021900211027
022000211027             pfTrst = pTrst;
022100211027             pfSub# = pSub;
022200211027             pfAcct = pAcct;
022300211027
022400211027             pfDiv = sqCntr;
022500211027
022600211027             pfCrtBy = 'GBS30XREF';
022700211027             pfCrtDt = %Dec( %Date ) ;
022800211027             pfCrtTm = %Dec( %Time ) ;
022900211027
023000211027             Write r_PayFCntr;
023100211027
023200211027           EndIf;
023300211027
023400211027         enddo;
023500211027         Exec Sql
023600211027           Close c3;
023700211027
023800211027       End-Proc;
023900200303
