000100180926       Ctl-opt option(*noDebugIo)   DftActGrp(*no) ;
000200180607
000300180607      *-------------------------------------------------------------------------
000400180607      *
000500180926      *  Description: This program replaces RPA190*.
000600180926      *
000700180926      *  This program will display a profound logic grid ( subfile )
000800180926      *  containing a list of all of the primary broker errors.
000900180926      *
001000180926      *  From that grid, the user would be able to access FM510CL
001100180926      *  adjust the errors them.
001200180926      *
001300180607      *
001400180607      *  Programmer.: Brian Rees
001500180607      *  Date.......: 06/07/2018
001600180607      *
001700180607      *-------------------------------------------------------------------------
001800180607
001900180607      *-------------------------------------------------------------------------
002000180607      *
002100180607      * Declare Files
002200180607      *
002300180607      *-------------------------------------------------------------------------
002400180926       Dcl-f GBS0045D WorkStn
002500180926          Handler('PROFOUNDUI(HANDLER)')
002600180926          SFILE(LSTSFL:rrn);
002700180926
002800180926       Dcl-f AccMst keyed ExtDesc('F.ACCMST') ExtFile(*extdesc);
002900180926       Dcl-f Gbs0045p usage( *output : *input ) keyed;
003000180607
003100180926
003200180607      *-------------------------------------------------------------------------
003300180607      *
003400180607      * Global Variables
003500180607      *
003600180607      *-------------------------------------------------------------------------
003700180925       dcl-c q '''';
003800180925       dcl-s wCarBc Char(20);
003900180926       dcl-s wGrpCd Char(20);
004000180926       dcl-s wMonth Char(2);
004100180926       dcl-s wYear  Char(4);
004200180925
004300180926
004400180926       dcl-s SqlStmt Char(750);
004500180926       dcl-ds Sq_Data;
004600180926          sqTrst Zoned(3);
004700180926          sqSub  Zoned(3);
004800180926          sqAcct Zoned(4);
004900180926          sqPlan   Char(4);
005000180926          sqDesc   Char(40);
005100180926          PlanCount Zoned(5);
005200180926          PriBk_Cnt Zoned(5);
005300180926       End-Ds;
005400180926
005500180926       dcl-s rrn Zoned(5);
005600180824
005700180824
005800180824
005900180724      *-------------------------------------------------------------------------
006000180724      *
006100180724      * Procedures
006200180724      *
006300180724      *-------------------------------------------------------------------------
006400180926       dcl-pr FM510CL ExtPgm('FM510CL');
006500180926          oAcct Char(10);
006600180926       End-Pr;
006700180607
006800180926
006900180607      *-------------------------------------------------------------------------
007000180607      *
007100180607      * Mainline Program
007200180607      *
007300180607      *-------------------------------------------------------------------------
007400180824
007500180927       Exec Sql
007600180927          Set Option Commit = *None, Naming = *Sys;
007700180926
007800180926       Dou btnExit = *on;
007900180926
008000180926
008100180926          Exfmt Screen1;
008200180926
008300180926          if btnExit = *on;
008400180926             leave;
008500180926          EndIf;
008600180926
008700180926
008800180926          ListErrors();
008900180926
009000180926
009100180926       enddo;
009200180926
009300180926       *inlr = *on;
009400180926
009500180926
009600180926
009700180926       // ----------------------------------------------------------------
009800180926       Dcl-Proc ListErrors;
009900180926
010000180926
010100180926          Dou btnExit = *on;
010200180927
010300180927             Exec Sql
010400180927                Delete From Qtemp.Gbs0045p;
010500180927
010600180927
010700180927             BuildFile();
010800180927
010900180926             ClearS1();
011000180926             LoadS1();
011100180926
011200180926             DisplyS1();
011300180926
011400180926
011500180926             //?Process Selections
011600180926             Select;
011700180926
011800180926
011900180926
012000180926             other;
012100180926                ReadChangedS1();
012200180926
012300180926             EndSl;
012400180926
012500180926
012600180926          enddo;
012700180926          btnExit = *off;
012800180926
012900180926       end-proc;
013000180926
013100180926
013200180926
013300180926       // ----------------------------------------------------------------
013400180926       dcl-proc CLEARS1;
013500180926
013600180926          //-------------------------
013700180926          //
013800180926          // Clear the Subfile
013900180926          //
014000180926          //-------------------------
014100180926
014200180926          ClrSfl = *on;
014300180926          Write LstCtl;
014400180926          ClrSfl = *off;
014500180926          rrn = 0;
014600180926
014700180926       End-Proc;
014800180926
014900180926
015000180926       // ----------------------------------------------------------------
015100180926       Dcl-Proc LoadS1;
015200180926
015300180926
015400180926          Setll *loval GBS0045P;
015500180926          Dou %eof(GBS0045P);
015600180926
015700180926             read GBS0045P;
015800180926             if %eof(GBS0045P);
015900180926                leave;
016000180926             endif;
016100180926
016200180926             s1FulAct = %Editc(peTrst : 'X') + '-' +
016300180926                %Editc(peSub# : 'X') + '-' +
016400180926                %Editc(peAcct : 'X');
016500180926
016600180926             s1Trst = peTrst;
016700180926             s1Sub  = peSub#;
016800180926             s1Acct = peAcct;
016900180926
017000180926             s1ActName = peAcName;
017100180926             s1PlanId = pePlan;
017200180926             s1Pdescr = pePlnNam;
017300180926             s1Error = peError;
017400180926
017500180926
017600180926             rrn = rrn + 1;
017700180926             write LstSfl;
017800180926
017900180926             If rrn >= 9999;
018000180926                leave;
018100180926             endIf;
018200180926
018300180926          enddo;
018400180926
018500180926
018600180926       End-Proc;
018700180926
018800180926       // ----------------------------------------------------------------
018900180926       Dcl-Proc DisplyS1;
019000180926
019100180926          DspSfl = *on  ;
019200180926          exfmt LstCtl;
019300180926          DspSfl = *off;
019400180926
019500180926       End-Proc;
019600180926
019700180926       // ----------------------------------------------------------------
019800180926       Dcl-Proc ReadChangedS1;
019900180926
020000180926          dcl-s o_Acct Char(10);
020100180926
020200180926          Dou *in95 = *ON;
020300180926             READC LstSfl;
020400180926             *in95 = %EOF;
020500180926
020600180926             If *in95 = *OFF;
020700180926
020800180926
020900180926                //-----------------------
021000180926                //
021100180926                // Edit Commission Control Record
021200180926                //
021300180926                //-----------------------
021400180926                if btnEdit = *on;
021500180926                   o_Acct = %Scanrpl('-' : '' : s1FulAct );
021600180926                   fm510cl ( o_Acct );
021700180926                endIf;
021800180926
021900180926
022000180926                btnEdit = *off;
022100180926                update LstSfl;
022200180926
022300180926             endIf;
022400180926
022500180926          enddo;
022600180926
022700180926       End-Proc;
022800180926
022900180926
023000180926       // ----------------------------------------------------------------
023100180926       dcl-proc BuildFile;
023200180926
023300180926          dcl-s wDate Char(8);
023400180926
023500180926          wCarBc = q + '1' + q + ',' +
023600180926             q + '2' + q + ',' +
023700180926             q + '3' + q + ',' +
023800180926             q + '4' + q + ',' +
023900180926             q + 'D' + q ;
024000180926
024100180926          wGrpCd = q + 'CH' + q + ',' +
024200180926             q + 'S2' + q + ',' +
024300180926             q + 'AH' + q + ',' +
024400180926             q + 'S1' + q ;
024500180926
024600180926          wMonth = %Editc( s1Month : 'X' );
024700180926          wYear  = %Editc( s1Year  : 'X' );
024800180926          wDate = wYear + wMonth + '01';
024900180926
025000180926          SqlStmt =
025100180926             ' SELECT cmtrst, csubdv, cmacct, cmplan, pdescr, COUNT(*), '  +
025200180926             '    Sum(CASE WHEN Substring(free5,1,1) = ' + q + 'Y' + q +
025300180926             ' THEN 1 ELSE 0 END) ' +
025400180926             ' FROM "F.COMCTX"  '  +
025500180926             ' Left JOIN "F.PLNMST" ON pltrst = cmtrst ' +
025600180926             '                AND plsub# = csubdv '  +
025700180926             '                AND plplan = cmplan '  +
025800180926
025900180926             ' Left JOIN "F.CARMST" ON pcarr = carrcd ' +
026000180926
026100180926             ' WHERE  ( carbc IN ( ' + %Trim( wCarBc) + ')'  +
026200180926             ' OR cgrpcd IN ( ' + %Trim( wGrpCd) + '))'  +
026300180926             ' AND ( effdat <= ' + wDate     +
026400180926             '   AND ( cmcan = 0 '           +
026500180926             '   OR cmcan > ' + wDate + ' ) ) '   +
026600180926             ' GROUP  BY cmtrst, csubdv, cmacct, cmplan, pdescr'   +
026700180926             ' ORDER  BY cmtrst, csubdv, cmacct, cmplan, pdescr' ;
026800180926
026900180926             Exec Sql
027000180926             Declare C1 Cursor For Sqlstmt;
027100180926          Exec Sql
027200180926             Prepare Sqlstmt From :Sqlstmt;
027300180926          Exec Sql
027400180926             Open C1;
027500180926
027600180926          dou SqlCod <> *Zero;
027700180926          Exec Sql
027800180926             Fetch Next From C1 Into :Sq_Data;
027900180926
028000180926             if SqlCod <> *zero;
028100180926                Leave;
028200180926             endif;
028300180926
028400180926
028500180926             //----------------------------------------------------
028600180926             //
028700180926             //  If there are any errors - Write to the work file
028800180926             //
028900180926             //----------------------------------------------------
029000180926             peError = '';
029100180926
029200180926             if PlanCount > 1 and PriBk_Cnt = 0;
029300180926                peError = 'No Primary Broker';
029400180926             EndIf;
029500180926
029600180926
029700180926             if PlanCount > 1 and PriBk_Cnt > 1;
029800180926                peError = 'More than 1 Primary Broker';
029900180926             EndIf;
030000180926
030100180926             if PlanCount = 1 and PriBk_Cnt <> 0;
030200180926                peError = 'Primary Broker w/No Split';
030300180926             EndIf;
030400180926
030500180926
030600180926             //-------------------------
030700180926             // Write to the Work File
030800180926             //-------------------------
030900180926             if peError > '';
031000180926
031100180926                chain ( sqTrst : sqSub : sqAcct ) AccMst;
031200180926
031300180926                peTrst = sqTrst;
031400180926                peSub# = sqSub;
031500180926                peAcct = sqAcct;
031600180926
031700180926                peAcName = acNam1;
031800180926
031900180926                pePlan = sqPlan;
032000180926                pePlnNam = sqDesc;
032100180926
032200180926                write r_Gbs0045;
032300180926
032400180926             endif;
032500180926
032600180926
032700180926          enddo;
032800180926
032900180926          Exec Sql
033000180926             Close C1;
033100180926
033200180926
033300180926
033400180926       end-proc;
